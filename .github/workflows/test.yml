name: Test Deployment with Notifications

on:
  push:
    branches:
      - test
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: To_do_app/package-lock.json

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci
        working-directory: To_do_app

      # Step 4: Run tests
      - name: Run tests
        run: npm test
        working-directory: To_do_app

      # Step 5: Build the app
      - name: Build the app
        run: npm run build --verbose
        working-directory: To_do_app

      # Step 6: List build directory
      - name: List Build directory
        run: ls -alh To_do_app/dist || echo "Build directory not found"

      # Step 7: Deploy to Netlify (test branch)
      - name: Deploy to Netlify (Test)
        if: github.ref == 'refs/heads/test'
        uses: nwtgck/actions-netlify@v3
        with:
          publish-dir: To_do_app/dist
          production-deploy: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_TEST_SITE_ID }}
          HOMEPAGE_URL: ${{ secrets.HOMEPAGE_URL }}


  create-pull-request:
    name: Create Pull Request for Test to Prod
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install GitHub CLI
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      # Step 3: Authenticate with GitHub CLI using Personal Access Token (PAT)
      - name: Authenticate with GitHub CLI
        run: echo "${{ secrets.TOKEN }}" | gh auth login --with-token

      # Step 4: Create the Pull Request
      - name: Create Pull Request
        run: gh pr create --base prod --head test --title "Merge Test into Prod" --body "This PR merges changes from the test branch to the prod branch."

      # Step 5: Send email for PR creation
      - name: Send email for PR creation
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Pull Request Created: Test to Prod"
          body: "A pull request has been created to merge changes from the test branch to the prod branch."
          to: "ukalicheti@anergroup.com"
          from: "kudaykiranreddy143@gmail.com"
